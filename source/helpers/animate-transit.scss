// ANIMATE TRANSIT
// -----------------------------------------------------------------------------

@use "sass:list";
@use "../settings" as *;

@mixin animate-transit($item, $styles: "fade", $phases: ("in", "out"), $slide-origin: "top", $slide-size: 1rem) {
  $opacity-change: null;
  $slide-change: null;
  $opacity-start: null;
  $opacity-end: null;
  $translate-start: null;
  $translate-end: null;
  $translate-axis: null;

  @if (list.index($styles, "fade")) {
    $opacity-change: true;
  }
  @if (list.index($styles, "slide")) {
    $slide-change: true;
  }

  @if $slide-change {
    @if ($slide-origin == "top" or $slide-origin == "bottom") {
      $translate-axis: "Y";
    } @else if ($slide-origin == "left" or $slide-origin == "right") {
      $translate-axis: "X";
    }
  }

  @each $phase in $phases {
    @if ($phase == "in") {
      @if $opacity-change {
        $opacity-start: 0;
        $opacity-end: 1;
      }
      @if $slide-change {
        $translate-start: -$slide-size;
        $translate-end: 0;
      }
    } @else if ($phase == "out") {
      @if $opacity-change {
        $opacity-start: 1;
        $opacity-end: 0;
      }
      @if $slide-change {
        $translate-start: 0;
        $translate-end: -$slide-size;
      }
    } @else {
      @error "Invalid transit animation phase name. Check spelling or review helper definition.";
    }

    @keyframes #{$item}-#{$phase} {
      0% {
        @if $opacity-change {
          opacity: $opacity-start;
        }
        @if $slide-change {
          transform: translate#{$translate-axis }(#{$translate-start});
        }
      }
      100% {
        @if $opacity-change {
          opacity: $opacity-end;
        }
        @if $slide-change {
          transform: translate#{$translate-axis }(#{$translate-end});
        }
      }
    }
  }
}
