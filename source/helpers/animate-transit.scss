// ANIMATE TRANSIT
// -----------------------------------------------------------------------------

@use "sass:list";
@use "sass:math";
@use "../settings" as *;

@mixin animate-transit($item, $effects: ("fade", "slide"), $phases: ("in", "out"), $translate-axis: "Y", $translate-length: -1rem) {
  $valid-effects: ("fade", "slide");
  $valid-phases: ("in", "out");
  $valid-translate-axes: ("X", "Y");
  $valid-translate-units: ("rem", "em", "vw", "vh", "px", "%");

  @if not ($valid-effects == $effects or list.index($valid-effects, $effects)) {
    @error "Invalid transit animation style name. Check spelling or review helper definition.";
  } 
  @if ($valid-phases != $phases and list.index($valid-phases, $phases) == null) {
    @error "Invalid transit animation phase name. Check spelling or review helper definition.";
  } 
  @if (list.index($valid-translate-axes, $translate-axis) == null) {
    @error "Invalid translate axis name. Check spelling or review helper definition.";
  } 
  @if (list.index($valid-translate-units, math.unit($translate-length)) == null) {
    @error "Invalid translate length unit. Check spelling or review helper definition.";
  }

  $opacity-change: if(list.index($effects, "fade"), true, false);
  $opacity-start: 0;
  $opacity-end: 1;
  $transform-change: if(list.index($effects, "slide"), true, false);
  $transform-start: translate#{$translate-axis}(#{$translate-length});
  $transform-end: translate#{$translate-axis}(0);

  @each $phase in $phases {
    @if ($phase == "out") {
      $opacity-start: 1;
      $opacity-end: 0;
      $transform-start: translate#{$translate-axis}(0);
      $transform-end: translate#{$translate-axis}(#{$translate-length});
    }

    @keyframes #{$item}-transit-#{$phase} {
      0% {
        @if $opacity-change {
          opacity: $opacity-start;
        }
        @if $transform-change {
          transform: $transform-start;
        }
      }
      100% {
        @if $opacity-change {
          opacity: $opacity-end;
        }
        @if $transform-change {
          transform: $transform-end;
        }
      }
    }
  }
}
